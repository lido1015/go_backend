// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "nodo@uh.cu"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/reset/workers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Reset worker password",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/roles": {
            "get": {
                "description": "Get available roles.",
                "tags": [
                    "Admin"
                ],
                "summary": "Get available roles.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RoleModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "description": "GetUserInfo from user front the CI",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get User Info by CI.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to get info",
                        "name": "ci",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UID of user to get info",
                        "name": "uid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDetailsModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/block": {
            "post": {
                "description": "Disable all services and block user access",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Block user",
                "parameters": [
                    {
                        "description": "Data of the user to block",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BlockUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/changeEmail": {
            "post": {
                "description": "Change user email, only if the new email are available",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Change user email",
                "parameters": [
                    {
                        "description": "current email and the new email",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChangeEmailData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/changepassword": {
            "post": {
                "description": "Change user password stored in LDAP server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Change user password by admin",
                "parameters": [
                    {
                        "description": "Account and new Password",
                        "name": "newPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ForceChangePasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/createVPN": {
            "post": {
                "description": "Create VPN of given user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create VPN of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to get VPN",
                        "name": "ci",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.VPNProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/deleteVPN": {
            "post": {
                "description": "Delete VPN of given user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete VPN of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to get VPN",
                        "name": "ci",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/disableVPN": {
            "post": {
                "description": "Disable VPN of given user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Disable VPN of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to disable VPN",
                        "name": "ci",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/editServices": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Edit user services status",
                "parameters": [
                    {
                        "description": "patch data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.EditServicesStatusData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/enableVPN": {
            "post": {
                "description": "Enable VPN of given user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Enable VPN of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to enable VPN",
                        "name": "ci",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/reset": {
            "post": {
                "description": "Reset user and clear password",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Reset user password.",
                "parameters": [
                    {
                        "description": "CI and Email of user to reset",
                        "name": "reset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Reset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/role": {
            "post": {
                "description": "Set role to user with id user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Set role to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "roleId to assign",
                        "name": "roleId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/statusVPN": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Check if the use has a VPN created",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to check VPN",
                        "name": "ci",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StatusVPNResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/unblock": {
            "post": {
                "description": "Returns the access of the account to the user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Unblock user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email of the user to unblock",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login into system with given credentials. Return two tokens, access and refresh.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login into system",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginCredentialsModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TokensResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh access and refresh tokens",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TokensResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/auth/resetpassword": {
            "post": {
                "description": "Reset password to removed user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password to user",
                "parameters": [
                    {
                        "description": "Reset Password required data",
                        "name": "resetPasswordData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ResetPasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResetPasswordResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Sign up new user with CI. If user is already enabled, then error is returned.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign up new user",
                "parameters": [
                    {
                        "description": "Sign up required data",
                        "name": "signUpData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SignUpModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SignUpResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/email/quota": {
            "get": {
                "description": "Get email buzon quota",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Get email buzon quota",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.EmailQuotaResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/proxy/quota": {
            "get": {
                "description": "Get Internet Quota Consumption",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proxy"
                ],
                "summary": "Get proxy quota",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ProxyQuotaResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/securityquestions": {
            "get": {
                "description": "Get available security questions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questions"
                ],
                "summary": "Get security questions.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SecurityQuestions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/user/changepassword": {
            "post": {
                "description": "Change user password stored in LDAP server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change user password.",
                "parameters": [
                    {
                        "description": "Old and new password",
                        "name": "newPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChangePasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/user/getVPN": {
            "get": {
                "description": "Get VPN of given user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get VPN of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CI of user to get VPN",
                        "name": "ci",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "Get User Data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userData"
                ],
                "summary": "Get User Data.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDataModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/user/search": {
            "get": {
                "description": "Search user by CI",
                "summary": "Search user by CI",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text with the query data",
                        "name": "text",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/user/securityquestions": {
            "get": {
                "description": "Get user stored security questions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questions"
                ],
                "summary": "Get user security questions.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ci",
                        "name": "ci",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "ci",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SecurityQuestions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AdminUserDataModel": {
            "type": "object",
            "required": [
                "activeYears",
                "careerName",
                "ci",
                "curseType",
                "email",
                "hasCloud",
                "hasEmail",
                "hasInternet",
                "hasVPN",
                "hasVc",
                "militancy",
                "name",
                "objectClass",
                "position",
                "salary",
                "scientificDegree",
                "serviceTime",
                "subArea",
                "subCategory",
                "vacations"
            ],
            "properties": {
                "activeYears": {
                    "type": "string"
                },
                "alreadySignIn": {
                    "type": "boolean"
                },
                "careerName": {
                    "type": "string"
                },
                "ci": {
                    "type": "string"
                },
                "curseType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hasCloud": {
                    "type": "boolean"
                },
                "hasEmail": {
                    "type": "boolean"
                },
                "hasInternet": {
                    "type": "boolean"
                },
                "hasVPN": {
                    "type": "boolean"
                },
                "hasVc": {
                    "type": "boolean"
                },
                "militancy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectClass": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "salary": {
                    "type": "string"
                },
                "scientificDegree": {
                    "type": "string"
                },
                "serviceTime": {
                    "type": "string"
                },
                "subArea": {
                    "type": "string"
                },
                "subCategory": {
                    "type": "string"
                },
                "vacations": {
                    "type": "string"
                }
            }
        },
        "api.BlockUserData": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.ChangeEmailData": {
            "type": "object",
            "properties": {
                "currentEmail": {
                    "type": "string"
                },
                "newEmail": {
                    "type": "string"
                }
            }
        },
        "api.ChangePasswordModel": {
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "api.EditServicesStatusData": {
            "type": "object",
            "properties": {
                "hasCloud": {
                    "type": "boolean"
                },
                "hasEmail": {
                    "type": "boolean"
                },
                "hasInternet": {
                    "type": "boolean"
                },
                "hasVideoConference": {
                    "type": "boolean"
                },
                "hasVpn": {
                    "type": "boolean"
                }
            }
        },
        "api.EmailQuotaResult": {
            "type": "object",
            "required": [
                "consumed",
                "quota"
            ],
            "properties": {
                "consumed": {
                    "type": "integer"
                },
                "quota": {
                    "type": "integer"
                }
            }
        },
        "api.Error": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ForceChangePasswordModel": {
            "type": "object",
            "required": [
                "email",
                "newPassword"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "api.LoginCredentialsModel": {
            "type": "object",
            "required": [
                "password",
                "user"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.ProxyQuotaResult": {
            "type": "object",
            "required": [
                "bonus",
                "consumed",
                "quota"
            ],
            "properties": {
                "bonus": {
                    "type": "integer"
                },
                "consumed": {
                    "type": "integer"
                },
                "quota": {
                    "type": "integer"
                }
            }
        },
        "api.Reset": {
            "type": "object",
            "properties": {
                "ci": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.ResetPasswordModel": {
            "type": "object",
            "required": [
                "answers",
                "ci",
                "email",
                "newPassword",
                "questions"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ci": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ResetPasswordResult": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "api.RoleModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.SecurityQuestions": {
            "type": "object",
            "required": [
                "questions"
            ],
            "properties": {
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.SignUpModel": {
            "type": "object",
            "required": [
                "answers",
                "ci",
                "password",
                "questions"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ci": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.SignUpResult": {
            "type": "object",
            "required": [
                "ou",
                "userId"
            ],
            "properties": {
                "ou": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "api.StatusVPNResult": {
            "type": "object",
            "properties": {
                "enableVPN": {
                    "type": "boolean"
                },
                "hasVPN": {
                    "type": "boolean"
                }
            }
        },
        "api.TokensResult": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "tokenRefresh": {
                    "type": "string"
                }
            }
        },
        "api.UserDataModel": {
            "type": "object",
            "required": [
                "activeYears",
                "careerName",
                "ci",
                "curseType",
                "email",
                "hasCloud",
                "hasEmail",
                "hasInternet",
                "hasVPN",
                "hasVc",
                "militancy",
                "name",
                "objectClass",
                "position",
                "salary",
                "scientificDegree",
                "serviceTime",
                "subArea",
                "subCategory",
                "vacations"
            ],
            "properties": {
                "activeYears": {
                    "type": "string"
                },
                "careerName": {
                    "type": "string"
                },
                "ci": {
                    "type": "string"
                },
                "curseType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hasCloud": {
                    "type": "boolean"
                },
                "hasEmail": {
                    "type": "boolean"
                },
                "hasInternet": {
                    "type": "boolean"
                },
                "hasVPN": {
                    "type": "boolean"
                },
                "hasVc": {
                    "type": "boolean"
                },
                "militancy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectClass": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "salary": {
                    "type": "string"
                },
                "scientificDegree": {
                    "type": "string"
                },
                "serviceTime": {
                    "type": "string"
                },
                "subArea": {
                    "type": "string"
                },
                "subCategory": {
                    "type": "string"
                },
                "vacations": {
                    "type": "string"
                }
            }
        },
        "api.UserDetailsModel": {
            "type": "object",
            "properties": {
                "accountsDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AdminUserDataModel"
                    }
                },
                "inSystem": {
                    "type": "boolean"
                }
            }
        },
        "api.VPNProfile": {
            "type": "object",
            "properties": {
                "vpnProfile": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "identity.sic.uh.cu",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "Gestion UH API",
	Description:      "Gestion UH API service for centralized user administration",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
